[{"G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\reportWebVitals.ts":"1","G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\App.tsx":"2","G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\index.tsx":"3","G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\components\\SignUp.tsx":"4","G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\components\\SignIn.tsx":"5","G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\utils\\Auth.ts":"6","G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\components\\Secret.tsx":"7","G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\generated\\graphql.tsx":"8"},{"size":425,"mtime":1608561680924,"results":"9","hashOfConfig":"10"},{"size":1385,"mtime":1608739914506,"results":"11","hashOfConfig":"10"},{"size":589,"mtime":1608571956065,"results":"12","hashOfConfig":"10"},{"size":5235,"mtime":1608741427462,"results":"13","hashOfConfig":"10"},{"size":3509,"mtime":1608742828564,"results":"14","hashOfConfig":"10"},{"size":1115,"mtime":1608739855851,"results":"15","hashOfConfig":"10"},{"size":387,"mtime":1608740550538,"results":"16","hashOfConfig":"10"},{"size":16356,"mtime":1608741665119,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"x867mh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\reportWebVitals.ts",[],["37","38"],"G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\App.tsx",[],"G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\index.tsx",[],["39","40"],"G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\components\\SignUp.tsx",["41","42","43"],"import React, { useState } from \"react\";\r\nimport { Button, Typography, TextField } from \"@material-ui/core\";\r\nimport { Formik, FormikValues, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// an interface defines the syntax that\r\n// any entity must adhere to\r\ninterface Props {}\r\n\r\n// mutation for graphql mutation\r\nconst SIGNUP_MUTATION = gql`\r\n  mutation SignUp(\r\n    $email: String!\r\n    $first_name: String!\r\n    $last_name: String!\r\n    $password: String!\r\n    $username: String!\r\n  ) {\r\n    create_user(\r\n      credentials: {\r\n        email: $email\r\n        first_name: $first_name\r\n        last_name: $last_name\r\n        password: $password\r\n        username: $username\r\n      }\r\n    ) {\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nconst initialValue = {\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  username: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  first_name: Yup.string().required(\"This field is required\"),\r\n  last_name: Yup.string(),\r\n  username: Yup.string().required(\"This field is required\"),\r\n  email: Yup.string()\r\n    .email(\"It should be an email\")\r\n    .required(\"This field is required\"),\r\n  password: Yup.string().required(\"This field is required\"),\r\n});\r\n\r\nfunction SignUp(props: Props) {\r\n  const [state, setState] = useState({\r\n    error: \"\",\r\n    success: \"\",\r\n  });\r\n  // [function that trigger http req,{diff. state of mutation}]\r\n  const [signup, { loading }] = useMutation(SIGNUP_MUTATION);\r\n\r\n  const history = useHistory();\r\n\r\n  const signupHandler = (values: FormikValues) => {\r\n    //console.log(values);\r\n    signup({ variables: values })\r\n      .then(({ errors }) => {\r\n        if (errors) {\r\n          console.log(errors);\r\n        } else {\r\n          history.push(\"/signin\");\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  const signupForm = () => {\r\n    const { error, success } = state;\r\n    return (\r\n      <>\r\n        <Typography variant=\"h6\">Sign Up</Typography>\r\n        <Formik\r\n          initialValues={initialValue}\r\n          validationSchema={validationSchema}\r\n          onSubmit={signupHandler}\r\n        >\r\n          {({\r\n            values,\r\n            touched,\r\n            errors,\r\n            isValid,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isInitialValid,\r\n          }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <TextField\r\n                label=\"First Name\"\r\n                name=\"first_name\"\r\n                value={values.first_name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                fullWidth\r\n                error={!!(errors.first_name && touched.first_name)}\r\n                helperText={\r\n                  errors.first_name && touched.first_name && errors.first_name\r\n                }\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                label=\"Last Name\"\r\n                name=\"last_name\"\r\n                value={values.last_name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                fullWidth\r\n                error={!!(errors.last_name && touched.last_name)}\r\n                helperText={\r\n                  errors.last_name && touched.last_name && errors.last_name\r\n                }\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                value={values.username}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                fullWidth\r\n                error={!!(errors.username && touched.username)}\r\n                helperText={\r\n                  errors.username && touched.username && errors.username\r\n                }\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                fullWidth\r\n                error={!!(errors.email && touched.email)}\r\n                helperText={errors.email && touched.email && errors.email}\r\n                margin=\"normal\"\r\n              />\r\n              <TextField\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                fullWidth\r\n                error={!!(errors.password && touched.password)}\r\n                helperText={\r\n                  errors.password && touched.password && errors.password\r\n                }\r\n                margin=\"normal\"\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                fullWidth\r\n                type=\"submit\"\r\n                disabled={!isValid || !!isInitialValid || loading}\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </>\r\n    );\r\n  };\r\n  return <div>{signupForm()}</div>;\r\n}\r\n\r\nexport default SignUp;\r\n","G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\components\\SignIn.tsx",["44","45","46"],"G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\utils\\Auth.ts",[],"G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\components\\Secret.tsx",["47"],"G:\\Borgomul-Experiment\\exp-borgomul-client\\src\\generated\\graphql.tsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"48","replacedBy":"52"},{"ruleId":"50","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":54,"column":17,"nodeType":"56","messageId":"57","endLine":54,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":77,"column":13,"nodeType":"56","messageId":"57","endLine":77,"endColumn":18},{"ruleId":"54","severity":1,"message":"59","line":77,"column":20,"nodeType":"56","messageId":"57","endLine":77,"endColumn":27},{"ruleId":"54","severity":1,"message":"60","line":2,"column":18,"nodeType":"56","messageId":"57","endLine":2,"endColumn":30},{"ruleId":"54","severity":1,"message":"61","line":5,"column":31,"nodeType":"56","messageId":"57","endLine":5,"endColumn":42},{"ruleId":"54","severity":1,"message":"62","line":20,"column":7,"nodeType":"56","messageId":"57","endLine":20,"endColumn":20},{"ruleId":"63","severity":1,"message":"64","line":10,"column":6,"nodeType":"65","endLine":10,"endColumn":8,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],["67"],["68"],"@typescript-eslint/no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'success' is assigned a value but never used.","'FormikValues' is defined but never used.","'useMutation' is defined but never used.","'SIGN_MUTATION' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [history]",{"range":"72","text":"73"},[278,280],"[history]"]